version: "3.9"
services:
  #Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of 64 validators.
  create-beacon-chain-genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    command:
      - testnet
      - generate-genesis
      - --fork=bellatrix
      - --num-validators=${NUMBER_OF_VALIDATORS}
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/consensus/config.yml
      - --geth-genesis-json-in=/execution/genesis.json
      - --geth-genesis-json-out=/execution/genesis.json
    volumes:
      - ./consensus:/consensus
      - ./execution:/execution

  # Sets up the genesis configuration for the go-ethereum client from a JSON file.
  geth-genesis:
    image: "ethereum/client-go:latest"
    command: --datadir=/execution init /execution/genesis.json
    volumes:
      - ./execution:/execution
      - ./execution/genesis.json:/execution/genesis.json
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully

  # Runs the go-ethereum execution client with the specified, unlocked account and necessary
  # APIs to allow for proof-of-stake consensus via Prysm.
  geth:
    image: "emird/geth_from_source:latest"
    networks:
      ETHclient_net:
        ipv4_address: 172.19.0.2
    command:
      - --netrestrict=172.19.0.0/16
      - --networkid=32382
      - --metrics
      - --metrics.addr=0.0.0.0
      - --metrics.port=6060
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/execution/jwtsecret
      - --datadir=/execution
      - --allow-insecure-unlock
      - --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
      - --password=/execution/geth_password.txt
      - --syncmode=full
    expose:
      - 8551:8551
      - 8545:8545
      - 30303:30303
    ports:
      - 6060:6060
    depends_on:
      geth-genesis:
        condition: service_completed_successfully
    volumes:
      - ./execution:/execution
      - ./execution/geth_password.txt:/execution/geth_password.txt
      - ./jwtsecret:/execution/jwtsecret

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  beacon-chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    networks:
      ETHclient_net:
        ipv4_address: 172.19.0.3
    command:
      - --datadir=/consensus/beacondata
      # No peers to sync with in this testnet, so setting to 0
      - --min-sync-peers=0
      - --monitoring-host=0.0.0.0
      - --monitoring-port=8080
      - --genesis-state=/consensus/genesis.ssz
      # The chain configuration file used for setting up Prysm
      - --chain-config-file=/consensus/config.yml
      # We specify the chain id used by our execution client
      - --chain-id=${CHAIN_ID:-32382}
      - --rpc-host=0.0.0.0
      - --contract-deployment-block=0
      - --grpc-gateway-host=0.0.0.0
      - --execution-endpoint=http://172.19.0.2:8551
      - --accept-terms-of-use
      - --jwt-secret=/execution/jwtsecret
      - --suggested-fee-recipient=0x123463a4b065722e99115d6c222f267d9cabb524
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    ports:
      - 4000:4000
      - 3500:3500
      - 8080:8080
      - 12000:12000
      - 13000:13000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./consensus:/consensus
      - ./jwtsecret:/execution/jwtsecret

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    networks:
      ETHclient_net:
        ipv4_address: 172.19.0.4
    command:
      - --beacon-rpc-provider=172.19.0.3:4000
      - --monitoring-host=0.0.0.0
      - --monitoring-port=8081
      - --graffiti=bootnode
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/consensus/config.yml
    depends_on:
      beacon-chain:
        condition: service_started
    ports:
      - 8081:8081
    volumes:
      - ./consensus:/consensus

  prometheus:
    image: "prom/prometheus:latest"
    network_mode: "host"
    command:
      - --web.enable-admin-api
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./custom_prometheus:/etc/prometheus
    ports:
      - 9090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  ETHclient_net:
    name: ETHclient_net
    ipam:
      driver: default
      config:
        - subnet: "172.19.0.0/16"
